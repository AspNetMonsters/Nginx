#number of worker processes to spawn
worker_processes  1;

#maximum number of connections
events {
    worker_connections  1024;
}

#serving http information
http {
    #set up mime types
    include       mime.types;
    default_type  application/octet-stream;

    #set up logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /home/stimms/logs/access.log  main;

    #uses sendfile(2) to send files directly to a socket without buffering
    sendfile        on;

    #the length of time a conneciton will stay alive on the server
    keepalive_timeout  65;

    #compress the response stream with gzip
    gzip  on;

    #set up a proxy cache location
    proxy_cache_path  /tmp/cache levels=1:2 keys_zone=aspnetcache:8m max_size=1000m inactive=600m;
    proxy_temp_path /tmp/cache/temp; 

    #configure where to listen
    server {
        #listen over https on port 443 on localhost
        listen       443 ssl http2;
        server_name  localhost;
        #set up certificates
        ssl_certificate /etc/letsencrypt/live/monster.simontimms.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/monster.simontimms.com/privkey.pem;

        #serve static files from /Users/stimms/Projects/nginxdemo for requests for
        #resources under /static
        location /static {
            root /Users/stimms/Projects/nginxdemo;
        }

    	location ^~ /.well-known/ { 	
               allow all;
    	   root /tmp/;
    	}
    
        #just cache image files
        location /images/ {
            #use the proxy to save files
            proxy_cache aspnetcache;
            proxy_cache_valid  200 302  60m;
            proxy_cache_valid  404      1m;
            proxy_pass http://127.0.0.1:5000;
        }

        #by default pass all requests on / over to localhost on port 5000
        #this is our Kestrel server
        location / {
            proxy_pass http://127.0.0.1:5000/;
        }
    }
}
